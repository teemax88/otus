"""






5. Функция Паллиндром. Дана строка и нужно проверить является ли она паллиндромом
6. Напишите функцию to_dict(lst), которая принимает аргумент в виде списка и возвращает словарь, в котором каждый
   элемент списка является и ключом и значением. Предполагается, что элементы списка будут соответствовать правилам
   задания ключей в словарях. Проверить что ОР соответствует ФР
7. Создайте словарь с количеством элементов не менее 5-ти. Поменяйте местами первый и последний элемент объекта.
   Удалите второй элемент. Добавьте в конец ключ «new_key» со значением «new_value». Выведите на печать итоговый
   словарь. Важно, чтобы словарь остался тем же (имел тот же адрес в памяти). Проверить что ОР соответствует ФР
8. Перед студентом стоит задача: на вход функции sieve() поступает список целых чисел. В результате выполнения этой
   функции будет получен кортеж уникальных элементов списка в обратном порядке. Проверить что ОР соответствует ФР
9. Напишите функцию tpl_sort(), которая сортирует кортеж, состоящий из целых чисел по возрастанию и возвращает его.
   Если хотя бы один элемент не является целым числом, то функция возвращает исходный кортеж. Проверить что ОР
   соответствует ФР
10. На входе функция to_set() получает строку или список чисел. Преобразуйте их в множество. На выходе должно
   получиться множество и его мощность. Проверить что ОР соответствует ФР
11. Предоставлен список натуральных чисел. Требуется сформировать из них множество. Если какое-либо число повторяется,
   то преобразовать его в строку по образцу: например, если число 4 повторяется 3 раза, то в множестве будет следующая
   запись: само число 4, строка «44» (второе повторение, т.е. число дублируется в строке), строка «444»
   (третье повторение, т.е. строка множится на 3). Реализуйте вывод множества через функцию set_gen(). Проверить что
   ОР соответствует ФР.
12. Напишите функцию search_substr(subst, st), которая принимает 2 строки и определяет, имеется ли подстрока subst
   в строке st. В случае нахождения подстроки, возвращается фраза True. Должно быть найдено совпадение независимо от
   регистра обеих строк.
"""


def test_one_len_int(fixture_len_list):
    """ 1. Создать произвольный список из 8 элементов, проверить что длина списка равна 8 элементам """
    assert fixture_len_list == 4, "Длина списка не равна 4"


def test_two_for_check_string(fixture_string):
    """ 2. Сложить две строки, проверить что полученный результат соответствует ожидаемому """
    assert fixture_string == "Hello World", "Фактический результат не равен Hello World"


def test_three_for_float(fixture_float):
    """ 3. Создать переменную с числом и проверить что тип данных равен ожидаемому float """
    assert isinstance(fixture_float, float), "Фактический результат не равен float"


def test_four():
    """ 4. Напишите функцию pos_add(a, b) и проверить что результат возвращается положительным """
